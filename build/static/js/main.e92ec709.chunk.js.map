{"version":3,"sources":["redux/actions/osxActions.ts","redux/actions/terminalActions.ts","components/apps/iterm/AppIcon.png","components/system/DockIcon.tsx","components/system/Dock.tsx","components/shared/icons.tsx","components/system/SystemToolbar.tsx","components/OSX.tsx","components/iOS.tsx","redux/reducers/osx.ts","redux/reducers/index.ts","App.tsx","redux/store/index.ts","serviceWorker.ts","index.tsx","registry/osx/index.ts","redux/reducers/terminal.ts","components/window/ToolBar.tsx","components/window/Window.tsx","components/window/index.ts","components/apps/BaseApp.tsx","components/InputRow.tsx","components/OutputRow.tsx","components/Terminal.tsx","components/apps/iterm/Iterm.tsx","components/apps/safari/Safari.tsx","components/apps/index.ts","components/shared/BlurView.tsx"],"names":["__webpack_require__","d","__webpack_exports__","OPEN_APP","CLOSE_APP","REQUEST_FOCUS","openApp","closeApp","requestFocus","app","dispatch","getState","existingApp","osx","apps","find","_app","name","type","ADD_INPUT_PAIR","CLEAR_INPUTS","CLEAR_CURRENT_INPUT","SET_CURRENT_INPUT","UPDATE_CWD","clearCurrentInput","setCurrentInput","value","module","exports","p","DockIcon","state","selected","handleClick","event","onClick","_this","props","setState","prevProps","open","this","_this$props","appName","source","classes","classNames","DockIcon--selected","indicatorClasses","DockIcon--openIndicator-hidden","react","className","src","String","alt","BlurView","React","Dock","hidden","handleHoverOn","handleHoverOff","handleIconClicked","_this2","bvClasses","shown","AppRegistry","openAppKeys","Set","map","onMouseLeave","childrenClassName","i","DockIcon_DockIcon","key","has","dockIconSource","onMouseEnter","connect","Apple","Object","assign","viewBox","version","fill","color","defaultProps","SystemToolbar","timerToken","currentTime","moment","_updateTime","window","setInterval","clearInterval","SystemToolbar_SystemToolbarItem","icons_Apple","height","width","format","SystemToolbarItem","active","children","items","item","OSX","reverse","appComponent","computedProps","focused","SystemToolbar_SystemToolbar","system_Dock","iOS","initialState","combineReducers","arguments","length","undefined","action","concat","toConsumableArray","appsWithoutTarget","filter","a","objectSpread","handleCloseAppAction","target","others","handleRequestFocusAction","terminal","store","middleware","thunk","createStore","rootReducer","applyMiddleware","apply","configureStore","App","react_default","createElement","react_media","query","maxWidth","matches","components_iOS","components_OSX","es","Terminal","Component","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","push","DEFAULT_DIRECTORY","cwd","currentInput","inputs","terminalReducer","_Users_steve_Code_stevendcoffey_com_web_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","_Users_steve_Code_stevendcoffey_com_web_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","inputPair","Toolbar","title","onCloseRequest","onHideRequest","onFullScreenRequest","handler","Window","toolbarProps","windowProps","lib","default","x","y","dragAxis","dragHandleClassName","bounds","enableResizing","bottomLeft","bottomRight","topLeft","topRight","ToolBar_Toolbar","BaseApp","_React$Component","_getPrototypeOf2","classCallCheck","_len","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","handleCloseRequested","_this$props2","inherits","createClass","_this$props3","windowPropsWithDefaults","minHeight","minWidth","components_window","InputRow","input","handleChange","onChange","sanitizeHtml","allowedTags","handleKeyPress","toLowerCase","onSubmit","preventDefault","ctrlKey","onClearCurrentInput","handleBlur","focus","inputValue","react_contenteditable_default","disabled","onBlur","onKeyDown","html","innerRef","ref","components_OutputRow","_ref","inputPairs","handleRowChange","newValue","handleRowSubmit","handleClearCurrentInput","renderInputRow","InputRow_InputRow","pair","timestamp","toString","output","Iterm","react__WEBPACK_IMPORTED_MODULE_5__","_BaseApp__WEBPACK_IMPORTED_MODULE_7__","_Terminal__WEBPACK_IMPORTED_MODULE_8__","registerApp","require","childrenClasses"],"mappings":"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","file":"static/js/main.e92ec709.chunk.js","sourcesContent":["import { GetState, Dispatch, ThunkAction } from \"../store\";\nimport { App } from \"../../registry/osx\";\n\nexport const OPEN_APP = \"OPEN_APP\";\nexport const CLOSE_APP = \"CLOSE_APP\";\nexport const REQUEST_FOCUS = \"REQUEST_FOCUS\";\n\nexport interface OpenAppAction {\n  type: typeof OPEN_APP;\n  app: App;\n}\n\nexport interface CloseAppAction {\n  type: typeof CLOSE_APP;\n  name: string;\n}\n\nexport interface RequestFocusAction {\n  type: typeof REQUEST_FOCUS;\n  name: string;\n}\n\nexport type OSXActionsType =\n  | OpenAppAction\n  | CloseAppAction\n  | RequestFocusAction;\n\nexport function openApp(app: App): ThunkAction {\n  return (dispatch: Dispatch, getState: GetState) => {\n    const { apps } = getState().osx;\n\n    const existingApp = apps.find(_app => _app.name === app.name);\n\n    if (!!existingApp) {\n      dispatch(requestFocus(existingApp.name));\n    } else {\n      dispatch({\n        type: OPEN_APP,\n        app\n      });\n    }\n  };\n}\n\nexport function closeApp(name: string): CloseAppAction {\n  return {\n    type: CLOSE_APP,\n    name\n  };\n}\n\nexport function requestFocus(name: string): RequestFocusAction {\n  return {\n    type: REQUEST_FOCUS,\n    name\n  };\n}\n","import { GetState, Dispatch, ThunkAction } from \"../store\";\nimport { State } from \"../reducers\";\n\nimport { DEFAULT_DIRECTORY } from \"../reducers/terminal\";\n\n// Behind the scenes sync actions\nexport const ADD_INPUT_PAIR = \"ADD_INPUT_PAIR\";\nexport const CLEAR_INPUTS = \"CLEAR_INPUTS\";\nexport const CLEAR_CURRENT_INPUT = \"CLEAR_CURRENT_INPUT\";\nexport const SET_CURRENT_INPUT = \"SET_CURRENT_INPUT\";\nexport const UPDATE_CWD = \"UPDATE_CWD\";\n\ninterface CommandMap {\n  [command: string]: (\n    dispatch: Dispatch,\n    state: State,\n    ...args: any[]\n  ) => string;\n}\n\nconst AVAILABLE_COMMANDS: CommandMap = {\n  cd,\n  clear,\n  echo,\n  pwd\n};\n\ninterface UpdateCwdAction {\n  type: typeof UPDATE_CWD;\n  cwd: string;\n}\n\ninterface ClearInputsAction {\n  type: typeof CLEAR_INPUTS;\n}\n\ninterface AddInputPairAction {\n  type: typeof ADD_INPUT_PAIR;\n  inputPair: {\n    input: string;\n    output: string | null;\n    timestamp: number;\n  };\n}\n\ninterface ClearCurrentInputAction {\n  type: typeof CLEAR_CURRENT_INPUT;\n}\n\ninterface SetCurrentInputAction {\n  type: typeof SET_CURRENT_INPUT;\n  value: string;\n}\n\nexport type TerminalActionsType =\n  | AddInputPairAction\n  | ClearInputsAction\n  | UpdateCwdAction\n  | ClearCurrentInputAction\n  | SetCurrentInputAction;\n\nfunction updateCwd(cwd: string): UpdateCwdAction {\n  return {\n    type: UPDATE_CWD,\n    cwd\n  };\n}\n\nfunction clearInputs(): ClearInputsAction {\n  return {\n    type: CLEAR_INPUTS\n  };\n}\n\nexport function clearCurrentInput(): ClearCurrentInputAction {\n  return {\n    type: CLEAR_CURRENT_INPUT\n  }\n}\n\nexport function setCurrentInput(value: string): SetCurrentInputAction {\n  return {\n    type: SET_CURRENT_INPUT,\n    value\n  }\n}\n\nexport function addInputPair(\n  input: string,\n  output: string | null\n): AddInputPairAction {\n  const timestamp = Date.now();\n\n  return {\n    type: ADD_INPUT_PAIR,\n    inputPair: {\n      input,\n      output,\n      timestamp\n    }\n  };\n}\n\nexport function processCommand(input: string): ThunkAction {\n  return (dispatch: Dispatch, getState: GetState) => {\n    const cleaned = input.replace(/^\\s+/, \"\").replace(/\\s+$/, \"\");\n    if (cleaned === \"\") {\n      dispatch(addInputPair(cleaned, null));\n      return;\n    }\n\n    const components = cleaned.split(\" \");\n    const exec = components[0];\n    const args = components.slice(1, components.length);\n\n    if (AVAILABLE_COMMANDS[exec] !== undefined) {\n      const output = AVAILABLE_COMMANDS[exec](dispatch, getState(), ...args);\n      dispatch(addInputPair(cleaned, output));\n    } else {\n      const output = `command not found: ${exec}`;\n      dispatch(addInputPair(input, output));\n    }\n  };\n}\n\nfunction clear(dispatch: Dispatch, state: State, ...args: string[]): string {\n  return dispatch(clearInputs());\n}\n\nfunction echo(dispatch: Dispatch, state: State, ...args: string[]): string {\n  return args.join(\" \");\n}\n\nfunction pwd(dispatch: Dispatch, state: State): string {\n  const { cwd } = state.terminal;\n  return cwd;\n}\n\nfunction cd(dispatch: Dispatch, state: State, newWd: string): string {\n  const { cwd } = state.terminal;\n\n  if (!newWd) {\n    dispatch(updateCwd(DEFAULT_DIRECTORY));\n    return \"\";\n  } else if (cwd === \".\") {\n    dispatch(updateCwd(cwd));\n    return \"\";\n  }\n\n  let components = newWd.split(\"/\");\n\n  return \"\";\n}\n","module.exports = __webpack_public_path__ + \"static/media/AppIcon.197e5f13.png\";","import * as React from \"react\";\nimport classNames from \"classnames\";\n\nimport { BlurView } from \"../shared/BlurView\";\n\nimport \"../../style/DockIcon.scss\";\n\ninterface DockIconProps {\n  appName: string;\n  onClick?: (event: React.MouseEvent<HTMLElement>) => void;\n  source: number;\n  open: boolean;\n}\n\ninterface DockIconState {\n  selected: boolean;\n}\n\nexport default class DockIcon extends React.Component<\n  DockIconProps,\n  DockIconState\n> {\n  state = {\n    selected: false\n  };\n\n  componentDidUpdate(prevProps: DockIconProps) {\n    if (prevProps.open && !this.props.open) {\n      this.setState({ selected: false });\n    }\n  }\n\n  render() {\n    const { appName, open, source } = this.props;\n    const { selected } = this.state;\n\n    const classes = classNames(\"DockIcon\", { \"DockIcon--selected\": selected });\n    const indicatorClasses = classNames(\"DockIcon--openIndicator\", {\n      \"DockIcon--openIndicator-hidden\": !open\n    });\n\n    return (\n      <div className=\"DockIcon--wrapper\">\n        <div onClick={this.handleClick} className={classes}>\n          <img\n            className=\"DockIcon--image\"\n            src={String(source)}\n            alt=\"DockIcon\"\n          />\n        </div>\n        <BlurView className=\"DockIcon--tooltip\">{appName}</BlurView>\n        <div className={indicatorClasses} />\n      </div>\n    );\n  }\n\n  handleClick = (event: React.MouseEvent<HTMLElement>) => {\n    const { onClick } = this.props;\n    if (onClick) {\n      this.setState({ selected: true });\n\n      onClick(event);\n    }\n  };\n}\n","import * as React from \"react\";\nimport classNames from \"classnames\";\nimport { connect } from \"react-redux\";\n\nimport AppRegistry, { App } from \"../../registry/osx\";\nimport DockIcon from \"./DockIcon\";\nimport { BlurView } from \"../shared/BlurView\";\n\nimport { State } from \"../../redux/reducers\";\nimport { Dispatch } from \"../../redux/store\";\nimport { openApp } from \"../../redux/actions/osxActions\";\n\nimport \"../../style/Dock.scss\";\n\ninterface DockProps {\n  apps: App[];\n  openApp?: typeof openApp;\n}\n\ninterface DockState {\n  hidden: boolean;\n}\n\nclass Dock extends React.Component<DockProps, DockState> {\n  state = {\n    hidden: true\n  };\n\n  render() {\n    const { hidden } = this.state;\n\n    const bvClasses = classNames([\n      \"Dock\",\n      {\n        hidden,\n        shown: !hidden\n      }\n    ]);\n\n    const { apps } = AppRegistry;\n    const openAppKeys = new Set(this.props.apps.map(app => app.name));\n\n    return (\n      <div className=\"Dock--wrapper\" onMouseLeave={this.handleHoverOff}>\n        <BlurView className={bvClasses} childrenClassName=\"Dock--iconsWrapper\">\n          {apps.map((app, i) => (\n            <DockIcon\n              key={i}\n              open={openAppKeys.has(app.name)}\n              appName={app.name}\n              source={app.dockIconSource}\n              onClick={this.handleIconClicked(app)}\n            />\n          ))}\n        </BlurView>\n        <div className=\"Dock--hoverRegion\" onMouseEnter={this.handleHoverOn} />\n      </div>\n    );\n  }\n\n  handleHoverOn = () => {\n    this.setState({ hidden: false });\n  };\n\n  handleHoverOff = () => {\n    this.setState({ hidden: true });\n  };\n\n  handleIconClicked = (app: App) => () => {\n    const { openApp } = this.props;\n    if (openApp) {\n      openApp(app);\n    }\n  };\n}\n\nconst mapStateToProps = (state: State) => ({\n  apps: state.osx.apps\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  openApp: (app: App) => {\n    dispatch(openApp(app));\n  }\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Dock);\n","import * as React from \"react\";\n\ninterface IconProps {\n  color: string;\n  height?: number;\n  width?: number;\n}\n\nexport const Apple = (props: IconProps) => (\n  <svg viewBox=\"0 0 170 170\" version=\"1.1\" {...props}>\n    <path\n      fill={props.color}\n      d=\"m150.37 130.25c-2.45 5.66-5.35 10.87-8.71 15.66-4.58 6.53-8.33 11.05-11.22 13.56-4.48 4.12-9.28 6.23-14.42 6.35-3.69 0-8.14-1.05-13.32-3.18-5.197-2.12-9.973-3.17-14.34-3.17-4.58 0-9.492 1.05-14.746 3.17-5.262 2.13-9.501 3.24-12.742 3.35-4.929 0.21-9.842-1.96-14.746-6.52-3.13-2.73-7.045-7.41-11.735-14.04-5.032-7.08-9.169-15.29-12.41-24.65-3.471-10.11-5.211-19.9-5.211-29.378 0-10.857 2.346-20.221 7.045-28.068 3.693-6.303 8.606-11.275 14.755-14.925s12.793-5.51 19.948-5.629c3.915 0 9.049 1.211 15.429 3.591 6.362 2.388 10.447 3.599 12.238 3.599 1.339 0 5.877-1.416 13.57-4.239 7.275-2.618 13.415-3.702 18.445-3.275 13.63 1.1 23.87 6.473 30.68 16.153-12.19 7.386-18.22 17.731-18.1 31.002 0.11 10.337 3.86 18.939 11.23 25.769 3.34 3.17 7.07 5.62 11.22 7.36-0.9 2.61-1.85 5.11-2.86 7.51zm-31.26-123.01c0 8.1021-2.96 15.667-8.86 22.669-7.12 8.324-15.732 13.134-25.071 12.375-0.119-0.972-0.188-1.995-0.188-3.07 0-7.778 3.386-16.102 9.399-22.908 3.002-3.446 6.82-6.3113 11.45-8.597 4.62-2.2516 8.99-3.4968 13.1-3.71 0.12 1.0831 0.17 2.1663 0.17 3.2409z\"\n    />\n  </svg>\n);\n\nApple.defaultProps = {\n  color: \"#fff\"\n};\n","import * as React from \"react\";\nimport classNames from \"classnames\";\nimport moment from \"moment\";\n\nimport { Apple } from \"../shared/icons\";\nimport { BlurView } from \"../shared/BlurView\";\n\nimport \"../../style/SystemToolbar.scss\";\n\ninterface SystemToolbarProps {}\ninterface SystemToolbarState {\n  currentTime: moment.Moment;\n}\n\nexport default class SystemToolbar extends React.Component<\n  SystemToolbarProps,\n  SystemToolbarState\n> {\n  timerToken: number = 0;\n\n  state = {\n    currentTime: moment()\n  };\n\n  componentDidMount() {\n    this.timerToken = window.setInterval(this._updateTime, 1000);\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.timerToken);\n  }\n\n  render() {\n    const { currentTime } = this.state;\n\n    return (\n      <BlurView\n        className=\"SystemToolbar\"\n        childrenClassName=\"SystemToolbar--childWrapper\"\n      >\n        <div className=\"SystemToolbar--menuDock\">\n          <SystemToolbarItem>\n            <Apple height={20} width={20} />\n          </SystemToolbarItem>\n        </div>\n        <div className=\"SystemToolbar--toolbarDock\">\n          <SystemToolbarItem className=\"SystemToolbar--clock\">\n            <div>{currentTime.format(\"ddd H:mm:ss\")}</div>\n          </SystemToolbarItem>\n        </div>\n      </BlurView>\n    );\n  }\n\n  _updateTime = () => {\n    this.setState({ currentTime: moment() });\n  };\n}\n\ninterface SystemToolbarItemProps {\n  className?: string;\n  children: React.ReactNode;\n}\n\ninterface SystemToolbarItemState {\n  active: boolean;\n}\n\nclass SystemToolbarItem extends React.Component<SystemToolbarItemProps> {\n  state = {\n    active: false\n  };\n\n  render() {\n    const { children, className } = this.props;\n    const { active } = this.state;\n\n    return (\n      <div\n        onClick={this.handleClick}\n        className={classNames(\"SystemToolbarItem\", className)}\n      >\n        {children}\n      </div>\n    );\n  }\n\n  handleClick = () => {\n    this.setState({\n      active: true\n    });\n  };\n}\n\ninterface SystemToolbarItemMenuProps {\n  items: string[];\n}\n\nclass SystemToolbarItemMenu extends React.Component<\n  SystemToolbarItemMenuProps\n> {\n  static defaultProps = {\n    items: []\n  };\n\n  render() {\n    const { items } = this.props;\n\n    return (\n      <BlurView className=\"SystemToolbarItemMenu\">\n        {items.map((item, i) => (\n          <div key={i} className=\"SystemToolbarItemMenu--menuitem\">\n            {item}\n          </div>\n        ))}\n      </BlurView>\n    );\n  }\n}\n","import * as React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport \"./apps\";\n\nimport Dock from \"./system/Dock\";\nimport SystemToolbar from \"./system/SystemToolbar\";\nimport { State } from \"../redux/reducers\";\nimport { App } from \"../registry/osx\";\n\nimport \"../style/OSX.scss\";\n\ninterface OSXProps {\n  apps: App[];\n}\n\nclass OSX extends React.Component<OSXProps> {\n  componentDidMount() {}\n\n  render() {\n    const { apps } = this.props;\n\n    return (\n      <div className=\"OSX\">\n        <div className=\"OSX--windowArea\">\n          {apps.reverse().map((app, i) => {\n            const { appComponent, name } = app;\n\n            const computedProps = {\n              key: name,\n              name,\n              focused: i === 0\n            };\n\n            return React.createElement(appComponent, computedProps);\n          })}\n        </div>\n        <SystemToolbar />\n        <Dock />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: State) => ({ apps: state.osx.apps });\n\nexport default connect(mapStateToProps)(OSX);\n","import * as React from \"react\";\n\nimport \"../style/iOS.scss\";\n\nclass iOS extends React.Component<{}> {\n  render() {\n    return <div className=\"iOS\" />;\n  }\n}\n\nexport default iOS;\n","import {\n  OPEN_APP,\n  CLOSE_APP,\n  REQUEST_FOCUS,\n  CloseAppAction,\n  RequestFocusAction,\n  OSXActionsType\n} from \"../actions/osxActions\";\n\nimport { App } from \"../../registry/osx\";\n\nexport interface OSXState {\n  apps: App[];\n}\n\nconst initialState: OSXState = {\n  apps: []\n};\n\nexport default function osxReducer(\n  state = initialState,\n  action: OSXActionsType\n): OSXState {\n  switch (action.type) {\n    case OPEN_APP:\n      return {\n        apps: [action.app, ...state.apps]\n      };\n    case CLOSE_APP:\n      return handleCloseAppAction(state, action);\n    case REQUEST_FOCUS:\n      return handleRequestFocusAction(state, action);\n    default:\n      return state;\n  }\n}\n\nfunction handleCloseAppAction(\n  state: OSXState,\n  action: CloseAppAction\n): OSXState {\n  const { apps } = state;\n  const appsWithoutTarget = apps.filter(a => a.name !== action.name);\n\n  return {\n    ...state,\n    apps: appsWithoutTarget\n  };\n}\n\nfunction handleRequestFocusAction(\n  state: OSXState,\n  action: RequestFocusAction\n): OSXState {\n  const { apps } = state;\n\n  const target = apps.find(app => app.name === action.name);\n  if (!target) {\n    return state;\n  }\n\n  const others = apps.filter(app => app.name !== action.name);\n\n  return {\n    ...state,\n    apps: [target, ...others]\n  };\n}\n","import { combineReducers } from \"redux\";\n\nimport terminal, { TerminalState } from \"./terminal\";\nimport osx, { OSXState } from \"./osx\";\n\nexport interface State {\n  osx: OSXState;\n  terminal: TerminalState;\n}\n\nexport default combineReducers({\n  osx,\n  terminal\n});\n","import React, { Component } from \"react\";\nimport Media from \"react-media\";\nimport { Provider } from \"react-redux\";\n\nimport OSX from \"./components/OSX\";\nimport IOS from \"./components/iOS\";\nimport Terminal from \"./components/Terminal\"\nimport { configureStore, ReduxStore } from \"./redux/store\";\n\nimport \"./style/App.scss\";\n\ninterface AppProps {}\ninterface AppState {\n  store: ReduxStore;\n}\n\nconst store = configureStore();\n\nclass App extends Component<AppProps, AppState> {\n  renderOS() {\n    return (\n      <Media query={{ maxWidth: 599 }}>\n        {(matches: boolean) => (matches ? <IOS /> : <OSX />)}\n      </Media>\n    )\n  }\n\n  render() {\n    return (\n      <Provider store={store}>\n        <div className=\"App\">\n          <Terminal />\n        </div>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","import { applyMiddleware, createStore, Store } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { createLogger } from \"redux-logger\";\n\nimport { Actions } from \"../actions\";\nimport rootReducer, { State } from \"../reducers\";\n\nexport type ReduxStore = Store<State, Actions>;\nexport type GetState = () => State;\nexport type PromiseAction = Promise<Actions>;\nexport type ThunkAction = (dispatch: Dispatch, getState: GetState) => void;\nexport type Dispatch = (\n  action: Actions | ThunkAction | PromiseAction | Array<Actions>\n) => any;\n\nexport function configureStore() {\n  const middleware = [thunk];\n  if (process.env.NODE_ENV === \"development\") {\n    const logger = createLogger({});\n    // @ts-ignore\n    middleware.push(logger);\n  }\n\n  return createStore(rootReducer, applyMiddleware(...middleware));\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit http://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See http://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./style/index.scss\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import * as React from \"react\";\n\nimport { AppPropTypes } from \"../../components/apps\";\n\nexport type OSXAppType = React.ComponentClass<AppPropTypes>;\n\nexport interface App {\n  appComponent: OSXAppType;\n  dockIconSource: number;\n  name: string;\n}\n\nexport default class AppRegistry {\n  static apps: App[] = [];\n\n  static registerApp(app: App) {\n    this.apps.push(app);\n  }\n}\n","import {\n  ADD_INPUT_PAIR,\n  CLEAR_INPUTS,\n  CLEAR_CURRENT_INPUT,\n  SET_CURRENT_INPUT,\n  UPDATE_CWD,\n  TerminalActionsType\n} from \"../actions/terminalActions\";\n\nexport const DEFAULT_DIRECTORY = \"/home/steve\";\n\nexport interface InputPair {\n  timestamp: number;\n  input: string;\n  output: string | null;\n}\n\nexport interface TerminalState {\n  cwd: string;\n  currentInput: string;\n  inputs: InputPair[];\n}\n\nconst initialState: TerminalState = {\n  cwd: DEFAULT_DIRECTORY,\n  currentInput: \"\",\n  inputs: []\n};\n\nexport default function terminalReducer(\n  state = initialState,\n  action: TerminalActionsType\n) {\n  switch (action.type) {\n    case ADD_INPUT_PAIR:\n      return {\n        ...state,\n        inputs: [...state.inputs, action.inputPair]\n      };\n    case CLEAR_INPUTS:\n      return {\n        ...state,\n        inputs: []\n      };\n    case CLEAR_CURRENT_INPUT:\n      return {\n        ...state,\n        currentInput: \"\"\n      };\n    case SET_CURRENT_INPUT:\n      return {\n        ...state,\n        currentInput: action.value\n      };\n    case UPDATE_CWD:\n      return {\n        ...state,\n        cwd: action.cwd\n      };\n    default:\n      return state;\n  }\n}\n","import * as React from \"react\";\n\nimport \"../../style/Toolbar.scss\";\n\nexport interface ToolbarProps {\n  title?: string;\n  onCloseRequest?: () => void;\n  onHideRequest?: () => void;\n  onFullScreenRequest?: () => void;\n}\n\nexport default function Toolbar(props: ToolbarProps) {\n  const { title, onCloseRequest, onHideRequest, onFullScreenRequest } = props;\n\n  return (\n    <div className=\"Toolbar\">\n      <div className=\"Toolbar--button\" onClick={handleClick(onCloseRequest)} />\n      <div className=\"Toolbar--button\" onClick={handleClick(onHideRequest)} />\n      <div\n        className=\"Toolbar--button\"\n        onClick={handleClick(onFullScreenRequest)}\n      />\n    </div>\n  );\n}\n\nconst handleClick = (handler?: () => void) => () => {\n  if (handler) {\n    handler();\n  }\n};\n","import * as React from \"react\";\nimport { Rnd, Props as RndProps } from \"react-rnd\";\n\nimport Toolbar, { ToolbarProps } from \"./ToolBar\";\n\nimport \"./Window.scss\";\n\ninterface WindowProps {\n  children?: React.ReactNode;\n  toolbarProps: ToolbarProps;\n  windowProps: RndProps;\n  onClick?: () => void;\n}\n\nexport default class Window extends React.Component<WindowProps> {\n  static defaultProps = {\n    focused: false\n  };\n\n  render() {\n    const { children, toolbarProps, windowProps } = this.props;\n    return (\n      <Rnd\n        className=\"Window\"\n        default={{ x: 100, y: 100, width: 320, height: 200 }}\n        dragAxis=\"both\"\n        dragHandleClassName=\"Toolbar\"\n        bounds=\".OSX--windowArea\"\n        enableResizing={{\n          bottomLeft: true,\n          bottomRight: true,\n          topLeft: true,\n          topRight: true\n        }}\n        {...windowProps}\n      >\n        <div className=\"Window--contentArea\">\n          <Toolbar {...toolbarProps} />\n          <div className=\"Window--childrenArea\">{children}</div>\n        </div>\n      </Rnd>\n    );\n  }\n}\n","import Window from \"./Window\";\n\nexport default Window;\n","import * as React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Props as RndProps } from \"react-rnd\";\n\nimport Window from \"../window\";\nimport { Dispatch } from \"../../redux/store\";\nimport { closeApp, requestFocus } from \"../../redux/actions/osxActions\";\n\nexport interface BaseAppProps {\n  windowProps?: RndProps;\n  children?: React.ReactNode;\n  closeApp?: typeof closeApp;\n  name: string;\n  requestFocus?: typeof requestFocus;\n}\n\nconst DEFAULT_MIN_WIDTH = 300;\nconst DEFAULT_MIN_HEIGHT = 300;\n\nexport class BaseApp extends React.Component<BaseAppProps> {\n  render() {\n    const { children, windowProps } = this.props;\n\n    const windowPropsWithDefaults = {\n      minHeight: DEFAULT_MIN_HEIGHT,\n      minWidth: DEFAULT_MIN_WIDTH,\n      onClick: this.handleClick,\n      ...windowProps\n    };\n\n    return (\n      <Window\n        toolbarProps={{\n          onCloseRequest: this.handleCloseRequested\n        }}\n        windowProps={{ ...windowPropsWithDefaults }}\n      >\n        {children}\n      </Window>\n    );\n  }\n\n  handleCloseRequested = () => {\n    const { closeApp, name } = this.props;\n\n    if (closeApp) {\n      closeApp(name);\n    }\n  };\n\n  handleClick = () => {\n    const { requestFocus, name } = this.props;\n\n    if (requestFocus) {\n      requestFocus(name);\n    }\n  };\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  closeApp: (name: string) => dispatch(closeApp(name)),\n  requestFocus: (name: string) => dispatch(requestFocus(name))\n});\n\nexport default connect(\n  undefined,\n  mapDispatchToProps\n)(BaseApp);\n","import * as React from \"react\";\nimport ContentEditable from \"react-contenteditable\";\nimport sanitizeHtml from \"sanitize-html\";\n\nimport \"../style/InputRow.scss\";\n\ninterface InputRowProps {\n  active: boolean;\n  cwd: string;\n  inputValue: string;\n  onSubmit: () => void;\n  onChange: (newValue: string) => void;\n  onClearCurrentInput: () => void;\n}\n\nexport default class InputRow extends React.Component<InputRowProps> {\n  cwd: string;\n  input: HTMLDivElement | null;\n\n  constructor(props: InputRowProps) {\n    super(props);\n    this.cwd = props.cwd;\n    this.input = null;\n  }\n\n  componentDidMount() {\n    if (this.input) {\n      this.input.focus();\n    }\n  }\n\n  render() {\n    const { active, cwd, inputValue } = this.props;\n\n    return (\n      <div className=\"input-row\">\n        <span className=\"input-row__host\">stevendcoffey.com:</span>\n        <span className=\"input-row__prompt\">{cwd}</span>\n        <span className=\"input-row__separator\">%</span>\n        <ContentEditable\n          className=\"input-row__input\"\n          disabled={!active}\n          onBlur={this.handleBlur}\n          onChange={this.handleChange}\n          onKeyDown={this.handleKeyPress}\n          html={inputValue}\n          innerRef={(ref: HTMLInputElement) => {\n            this.input = ref;\n          }}\n        />\n        {active && <div className=\"input-row__caret\" />}\n      </div>\n    );\n  }\n\n  handleChange = (event: any): void => {\n    const { onChange } = this.props;\n    if (event.target.value) {\n      const sanitized = sanitizeHtml(event.target.value, { allowedTags: [] });\n      onChange(sanitized);\n    }\n  };\n\n  handleKeyPress = (event: React.KeyboardEvent<HTMLDivElement>): void => {\n    switch (event.key.toLowerCase()) {\n      case \"enter\":\n        const { onSubmit } = this.props;\n        event.preventDefault();\n        onSubmit();\n\n        break;\n      case \"u\":\n        if (event.ctrlKey) {\n          const { onClearCurrentInput } = this.props;\n          onClearCurrentInput();\n        }\n        break;\n      default:\n    }\n  };\n\n  handleBlur = (event: React.FocusEvent<HTMLDivElement>): void => {\n    if (this.input) {\n      this.input.focus();\n    }\n  };\n}\n","import React from \"react\";\n\nimport \"../style/OutputRow.scss\";\n\ninterface OutputRowProps {\n  children: string;\n}\n\nexport default ({ children }: OutputRowProps) => {\n  return (\n    <div className=\"OutputRow\">\n      <div className=\"OutputRow--text\">{children}</div>\n    </div>\n  );\n};\n","import * as React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { Dispatch } from \"../redux/store\";\nimport { InputPair } from \"../redux/reducers/terminal\";\nimport { State } from \"../redux/reducers\";\nimport {\n  clearCurrentInput,\n  setCurrentInput\n} from \"../redux/actions/terminalActions\";\nimport InputRow from \"./InputRow\";\nimport OutputRow from \"./OutputRow\";\n\nimport \"../style/Terminal.scss\";\n\ninterface TerminalProps {\n  cwd: string;\n  currentInput: string;\n  inputPairs: InputPair[];\n  clearCurrentInput?: typeof clearCurrentInput;\n  setCurrentInput?: typeof setCurrentInput;\n}\n\nfunction Terminal(props: TerminalProps) {\n  const {\n    clearCurrentInput,\n    currentInput,\n    cwd,\n    inputPairs,\n    setCurrentInput\n  } = props;\n\n  const handleRowChange = (newValue: string) => {\n    setCurrentInput && setCurrentInput(newValue);\n  };\n\n  const handleRowSubmit = () => {};\n\n  const handleClearCurrentInput = () => {\n    clearCurrentInput && clearCurrentInput();\n  };\n\n  const renderInputRow = (active: boolean, input: string) => (\n    <InputRow\n      cwd={cwd}\n      onSubmit={handleRowSubmit}\n      onChange={handleRowChange}\n      onClearCurrentInput={handleClearCurrentInput}\n      active={active}\n      inputValue={input}\n    />\n  );\n\n  return (\n    <div className=\"Terminal\">\n      <div className=\"Terminal--rows\">\n        {inputPairs.map(pair => (\n          <div key={pair.timestamp.toString()}>\n            {renderInputRow(false, pair.input)}\n            {pair.output && <OutputRow>{pair.output}</OutputRow>}\n          </div>\n        ))}\n        {renderInputRow(true, currentInput)}\n      </div>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state: State) => ({\n  cwd: state.terminal.cwd,\n  inputPairs: state.terminal.inputs,\n  currentInput: state.terminal.currentInput\n});\n\nconst mapDispatch = (dispatch: Dispatch) => ({\n  clearCurrentInput: (value: string) => dispatch(clearCurrentInput()),\n  setCurrentInput: (value: string) => dispatch(setCurrentInput(value))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatch\n)(Terminal);\n","import * as React from \"react\";\n\nimport AppRegistry from \"../../../registry/osx\";\nimport BaseApp, { BaseAppProps } from \"../BaseApp\";\nimport Terminal from \"../../Terminal\";\n\nexport default class Iterm extends React.Component<BaseAppProps> {\n  render() {\n    return (\n      <BaseApp {...this.props} windowProps={{ minHeight: 300, minWidth: 600 }}>\n        <Terminal />\n      </BaseApp>\n    );\n  }\n}\n\nAppRegistry.registerApp({\n  appComponent: Iterm,\n  dockIconSource: require(\"./AppIcon.png\"),\n  name: \"iTerm\"\n});\n","import * as React from \"react\";\n// @ts-ignore\nimport renderHTML from \"react-render-html\";\n\nimport AppRegistry from \"../../../registry/osx\";\nimport BaseApp, { BaseAppProps } from \"../BaseApp\";\nimport { BlurView } from \"../../shared/BlurView\";\n\nimport \"./Safari.scss\";\n\ntype SafariState = {\n  url?: string;\n};\n\nexport default class Safari extends React.Component<BaseAppProps, SafariState> {\n  iframe: HTMLIFrameElement | null = null;\n  state = {\n    url: \"https://www.apple.com\"\n  };\n\n  bindEvents() {\n    window.addEventListener(\"message\", this.handleMessageReceived, false);\n  }\n\n  handleMessageReceived = (message: MessageEvent) => {\n    console.log(message);\n  };\n\n  render() {\n    const { url } = this.state;\n\n    return (\n      <BaseApp {...this.props} windowProps={{ minHeight: 300, minWidth: 600 }}>\n        <BlurView\n          className=\"Safari--mainWindow\"\n          childrenClassName=\"Safari--fill\"\n        >\n          <iframe\n            is=\"x-frame-bypass\"\n            className=\"Safari--fill Safari--webFrame\"\n            src={url}\n            width=\"100%\"\n            height=\"100%\"\n          />\n        </BlurView>\n      </BaseApp>\n    );\n  }\n}\n\n// AppRegistry.registerApp({\n//   appComponent: Safari,\n//   dockIconSource: require(\"./AppIcon.png\"),\n//   name: \"Safari\"\n// });\n","import Iterm from \"./iterm/Iterm\";\nimport Safari from \"./safari/Safari\";\n\nexport * from \"./types\";\nexport { Iterm, Safari };\n","import * as React from \"react\";\nimport classNames from \"classnames\";\nimport { Rnd, Props as RndProps } from \"react-rnd\";\n\nimport \"../../style/BlurView.scss\";\n\ninterface OwnBlurViewProps {\n  children?: React.ReactNode;\n  childrenClassName?: string;\n}\n\ntype BlurViewProps = OwnBlurViewProps & React.HTMLAttributes<HTMLDivElement>;\ntype DraggableData = {\n  node: HTMLElement;\n  x: number;\n  y: number;\n  deltaX: number;\n  deltaY: number;\n  lastX: number;\n  lastY: number;\n};\n\nexport function BlurView(props: BlurViewProps) {\n  const { children, childrenClassName, className } = props;\n\n  const childrenClasses = classNames(\"BlurView--children\", childrenClassName);\n  return (\n    <div className={classNames(\"BlurView\", className)}>\n      <div className={childrenClasses}>{children}</div>\n    </div>\n  );\n}\n\ntype DraggableBlurViewProps = BlurViewProps & RndProps;\ninterface DraggableBlurViewState {\n  x: number;\n  y: number;\n}\n\nexport class DraggableBlurView extends React.Component<\n  DraggableBlurViewProps,\n  DraggableBlurViewState\n> {\n  constructor(props: DraggableBlurViewProps) {\n    super(props);\n\n    if (!!props.default) {\n      this.state = {\n        x: props.default.x,\n        y: props.default.y\n      };\n    } else {\n      this.state = {\n        x: 0,\n        y: 0\n      };\n    }\n  }\n\n  render() {\n    const { x, y } = this.state;\n    let style = {};\n    if (!!x && !!y) {\n      let cx = x - 8;\n      let cy = y - 8;\n      style = {\n        backgroundPosition: `${-cx}px ${-cy}px`\n      };\n    }\n    console.log(style);\n\n    return (\n      <Rnd\n        onDrag={this.handleDrag}\n        default={{ x: 0, y: 0, width: 100, height: 100 }}\n        className=\"BlurView\"\n        style={style}\n      />\n    );\n  }\n\n  handleDrag = (_: any, { x, y }: DraggableData) => {\n    console.log(x, y);\n    this.setState({ x, y });\n  };\n}\n"],"sourceRoot":""}